a <- c(1, 2, 3, 4, 5)
a * 2
a+ b
a + 2
a <- c(1, 2, 3, 4, 5)
b <- c(1, 2, 3, 4, 5)
a * b
A <- matrix(c(2, 4, 3, 1, 5, 7), nrow = 2, ncol = 3, byrow = TRUE)
A
t(A)
c <- c(1, 2, 3)
c * A
c * t(A)
b <- matrix(1:12, ncol=4, byrow=T)
b
a <- matrix(1:6, ncol=2, byrow=T)
a
b <- matrix(1:6, ncol=3, byrow=T)
b
a * b
a %*% b
a * b
a <- matrix(1:6, 3, 2)
a
matrix(c(1,3,4,5,6,7), 3, 2)
matrix(1:9, 3,3)
matrix(1:9, 3,3) * A
matrix(1:9, 3,3) * a
matrix(1:9, 3,3) %*% a
matrix(1:9, 3,3) * matrix(1:9, 3,3)
a <- matrix(c(6,3,4,5,6,7), 2, 3)
a
b <- matrix(c(3,4,5,6,7,8), 3, 2)
a %*% b
a * b
a * a
10+80/85.33
10 + 800/85.33
10 + 80000/85.33
5000/60*2000*512
5000/60*2000*512 /1000000
10+4/85.33
10.04688 * 20
10+80000/85
40 * 0.5882 + 0.9163 * 15 + 0.95 * 3.4 + 1.6 + 20 * 0.6 + 0.84 * 7 + 0.94 * 13
help(kmeans)
x <- rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
x
colnames(x) <- c("x", "y")
cl <- kmeans(x, 2)
plot(x, col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex = 2)
cl$cluster
c(1,2)[1]
print(1 < 2)
choice <- function(c, d) {
a <- c(5, 10)
b <- c(20, 5)
r1 <- (c[1] - a[1]) * (c[1] - a[1]) + (c[2] - a[2]) * (c[2] - a[2])
r2 <- (d[1] - a[1]) * (d[1] - a[1]) + (d[2] - a[2]) * (d[2] - a[2])
r3 <- (c[1] - b[1]) * (c[1] - b[1]) + (c[2] - b[2]) * (c[2] - b[2])
r4 <- (d[1] - b[1]) * (d[1] - b[1]) + (d[2] - b[2]) * (d[2] - b[2])
if (r1 < r3 && r2 < r4) print(a)
if (r1 > r3 && r2 > r4) print(b)
}
choice(c(7,8), c(12, 5))
choice(c(7,8), c(12, 5))
choice <- function(c, d) {
a <- c(5, 10)
b <- c(20, 5)
r1 <- (c[1] - a[1]) * (c[1] - a[1]) + (c[2] - a[2]) * (c[2] - a[2])
r2 <- (d[1] - a[1]) * (d[1] - a[1]) + (d[2] - a[2]) * (d[2] - a[2])
r3 <- (c[1] - b[1]) * (c[1] - b[1]) + (c[2] - b[2]) * (c[2] - b[2])
r4 <- (d[1] - b[1]) * (d[1] - b[1]) + (d[2] - b[2]) * (d[2] - b[2])
if (r1 < r3 && r2 < r4) print("a")
if (r1 > r3 && r2 > r4) print("b")
}
choice <- function(c, d) {
a <- c(5, 10)
b <- c(20, 5)
r1 <- (c[1] - a[1]) * (c[1] - a[1]) + (c[2] - a[2]) * (c[2] - a[2])
r2 <- (d[1] - a[1]) * (d[1] - a[1]) + (d[2] - a[2]) * (d[2] - a[2])
r3 <- (c[1] - b[1]) * (c[1] - b[1]) + (c[2] - b[2]) * (c[2] - b[2])
r4 <- (d[1] - b[1]) * (d[1] - b[1]) + (d[2] - b[2]) * (d[2] - b[2])
if (r1 < r3 && r2 < r4) print("a")
if (r1 > r3 && r2 > r4) print("b")
}
choice(c(7,8), c(12, 5))
choice(c(13,10), c(16, 4))
choice <- function(c, d) {
a <- c(5, 10)
b <- c(20, 5)
r1 <- (c[1] - a[1]) * (c[1] - a[1]) + (c[2] - a[2]) * (c[2] - a[2])
r2 <- (d[1] - a[1]) * (d[1] - a[1]) + (d[2] - a[2]) * (d[2] - a[2])
r3 <- (c[1] - b[1]) * (c[1] - b[1]) + (c[2] - b[2]) * (c[2] - b[2])
r4 <- (d[1] - b[1]) * (d[1] - b[1]) + (d[2] - b[2]) * (d[2] - b[2])
if (r1 < r3 && r2 < r4) print("a")
if (r1 > r3 && r2 > r4) print("b")
print("****")
}
choice(c(13,10), c(16, 4))
choice(c(3,15), c(13, 7))
choice(c(6,15), c(13, 7))
choice(c(3,3), c(10, 1))
choice(c(15,14), c(20, 10))
choice <- function(c, d) {
a <- c(5, 10)
b <- c(20, 5)
r1 <- (c[1] - a[1]) * (c[1] - a[1]) + (c[2] - a[2]) * (c[2] - a[2])
r2 <- (d[1] - a[1]) * (d[1] - a[1]) + (d[2] - a[2]) * (d[2] - a[2])
r3 <- (c[1] - b[1]) * (c[1] - b[1]) + (c[2] - b[2]) * (c[2] - b[2])
r4 <- (d[1] - b[1]) * (d[1] - b[1]) + (d[2] - b[2]) * (d[2] - b[2])
if (r1 < r3 && r2 < r4) print("a")
if (r1 > r3 && r2 > r4) print("b")
print("****")
}
choice(C(6, 15), C(13, 7))
choice(C(6, 15), C(13, 7))
choice(C(6, 15), C(13, 7))
choice <- function(c, d) {
a <- c(5, 10)
b <- c(20, 5)
r1 <- (c[1] - a[1]) * (c[1] - a[1]) + (c[2] - a[2]) * (c[2] - a[2])
r2 <- (d[1] - a[1]) * (d[1] - a[1]) + (d[2] - a[2]) * (d[2] - a[2])
r3 <- (c[1] - b[1]) * (c[1] - b[1]) + (c[2] - b[2]) * (c[2] - b[2])
r4 <- (d[1] - b[1]) * (d[1] - b[1]) + (d[2] - b[2]) * (d[2] - b[2])
if (r1 < r3 && r2 < r4) print("a")
if (r1 > r3 && r2 > r4) print("b")
print("****")
}
choice(C(6, 15), C(13, 7))
choice <- function(c, d) {
a <- c(5, 10)
b <- c(20, 5)
r1 <- (c[1] - a[1]) * (c[1] - a[1]) + (c[2] - a[2]) * (c[2] - a[2])
r2 <- (d[1] - a[1]) * (d[1] - a[1]) + (d[2] - a[2]) * (d[2] - a[2])
r3 <- (c[1] - b[1]) * (c[1] - b[1]) + (c[2] - b[2]) * (c[2] - b[2])
r4 <- (d[1] - b[1]) * (d[1] - b[1]) + (d[2] - b[2]) * (d[2] - b[2])
if (r1 < r3 && r2 < r4) print("a")
if (r1 > r3 && r2 > r4) print("b")
print("****")
}
choice(c(6, 15), c(13, 7))
choice(c(7, 8), c(12, 5))
choice(c(3, 3), c(10, 1))
choice(c(13, 10), c(16, 4))
choice(c(15, 14), c(20, 10))
S = 500,000,000
S = 500000000
P = 5000000000
(S / 4 * 1000000) * (S / 4 * 1000000) * P + 1000000
P/ ((S / 4 * 1000000) * (S / 4 * 1000000))  + 1000000
S = 300000000
P = 100000000000
P/ ((S / 4 * 1000000) * (S / 4 * 1000000))  + 1000000
P/ ((S / 4 * 1000000) * (S / 4 * 1000000))
P * 1000000 * 1000000 / ((S / 4 ) * (S / 4))  + 1000000
S = 400000000
P = 160000000000
P * 1000000 * 1000000 / ((S / 4 ) * (S / 4))  + 1000000
S = 300000000
P = 100000000000
P * 1000000 * 1000000 / ((S / 4 ) * (S / 4))  + 1000000
S = 500000000
P = 5000000000
P * 1000000 * 1000000 / ((S / 4 ) * (S / 4))  + 1000000
S = 400000000
P = 160000000000
P * 1000000 * 1000000 / ((S / 4 ) * (S / 4))  + 1000000
S = 400000000
P = 160000000000
P * 1000000 / ( (S / 4))  + 1000000
S = 400000000
P = 800000000
P * 1000000 / ( (S / 4))  + 1000000
S = 200000000
P = 400000000
P * 1000000 / ( (S / 4))  + 1000000
S = 200000000
P = 800000000
P * 1000000 / ( (S / 4))  + 1000000
S = 100000000
P = 120000000
P * 1000000 / ( (S / 4))  + 1000000
S = 100000000
P = 540000000
P * 1000000 / ( (S / 4))  + 1000000
1.7e+07
choice(c(13,10), c(16, 4))
choice(c(3,15), c(13, 7))
choice(c(7,8), c(12, 5))
choice(c(7,12), c(12, 8))
choice(c(16,16), c(18, 5))
195868 / 5580035
195868 / 5580035 * 100%
195868 / 5580035 * %
195868 / 5580035 * 100
install.packages("plot3d")
install.packages("plot3D")
library(plot3d)
library(plot3D)
?hist3D()
setwd("G:/NYU_Class/BIGDATA/project/ouput")
# **************************************************
# processing date data
# **************************************************
weather.frame <- read.csv("merge.csv")
# plot
plot(weather.frame$TMAX, weather.frame$count, main = "MAX Temperature with Crimes", xlab = "Max Temperature", ylab = "Count")
plot(weather.frame$TMIN, weather.frame$count, main = "MIN Temperature with Crimes", xlab = "MIN Temperature", ylab = "Count")
plot(weather.frame$PRCP, weather.frame$count, main = "dot", xlab = "PRACI", ylab = "Count")
hist(weather.frame$PRCP)
weather.frame$precipitation <- sapply(weather.frame$PRCP, function(x)
if (x < 0.5) return ("0 - 0.5")
else if (x < 1) return ("0.5 - 1")
else if (x < 2) return ("1 - 2")
else return ("2 - more")
)
# box plot
library(ggplot2)
p <- ggplot(weather.frame, aes(precipitation, count))
p + geom_boxplot()
# wind
plot(weather.frame$AWND, weather.frame$count, main = "Wind with Crimes", xlab = "Average daily wind speed", ylab = "Count")
# merge with merge rate
rate.frame <- read.csv("merge_rate.csv")
weather.frame <- merge(weather.frame, rate.frame, key = "DATE")
library(plot3D)
View(weather.frame)
cut(weather.frame$rate)
cut(weather.frame$rate, 4)
hist(weather.frame$rate, 4)
hist(weather.frame$rate, 5)
hist3D(weather.frame$rate, weather.frame$PRCP, weather.frame$count)
example(persp3D)
?persp3D
?scatter3D
scatter3D(weather.frame$AWND, weather.frame$rate, weather.frame$count)
?scatter3D
scatter3D(weather.frame$AWND, weather.frame$rate, weather.frame$count, clab = c("Wind", "Inside Rate", "Count"))
?scatter3D
scatter3D(weather.frame$AWND, weather.frame$rate, weather.frame$count, xlab = "Wind")
scatter3D(weather.frame$AWND, weather.frame$rate, weather.frame$count, xlab = "Wind",
ylab = "Wind", zlab = "Count")
scatter3D(weather.frame$AWND, weather.frame$rate, weather.frame$count, xlab = "Wind",
ylab = "Inside Rate", zlab = "Count")
plot(weather.frame$AWND, weather.frame$rate, main = "Wind with Crimes", xlab = "Average daily wind speed", ylab = "Count")
plot(weather.frame$TMAX, weather.frame$rate, main = "Wind with Crimes", xlab = "Average daily wind speed", ylab = "Count")
scatter3D(weather.frame$TMAX, weather.frame$rate, weather.frame$count, xlab = "Max Temperature",
ylab = "Inside Rate", zlab = "Count")
?scatter3D
scatter3D(weather.frame$TMAX, weather.frame$rate, weather.frame$count, xlab = "Max Temperature",
ylab = "Inside Rate", zlab = "Count")
?scatter3D
scatter3D(weather.frame$TMAX, weather.frame$rate, weather.frame$count, xlab = "Max Temperature",
ylab = "Inside Rate", zlab = "Count",
theta = 30, phi = 30
)
scatter3D(weather.frame$TMAX, weather.frame$rate, weather.frame$count, xlab = "Max Temperature",
ylab = "Inside Rate", zlab = "Count",
theta = 30, phi = 50
)
scatter3D(weather.frame$AWND, weather.frame$rate, weather.frame$count, xlab = "Max Temperature",
ylab = "Inside Rate", zlab = "Count",
theta = 30, phi = 50
)
scatter3D(weather.frame$AWND, weather.frame$rate, weather.frame$count, xlab = "Wind",
ylab = "Inside Rate", zlab = "Count",
theta = 30, phi = 50
)
plot(weather.frame$AWND, weather.frame$rate, main = "Wind with Crimes", xlab = "Average daily wind speed", ylab = "Count")
plot(weather.frame$AWND, weather.frame$rate, main = "Wind with Crimes", xlab = "Average daily wind speed", ylab = "Rate")
plot(weather.frame$count, weather.frame$rate, main = "Wind with Crimes", xlab = "count", ylab = "Rate")
